# Makefile to create user1 and user2 executables (C++ version)

# Compiler and flags
CXX = g++
CXXFLAGS = -Wall -g
LDFLAGS = -L. -lksocket -lpthread

# Target executables
TARGETS = user1 user2

# Object files
OBJS = user1.o user2.o

# Default target
all: $(TARGETS)

# Rule to link user1 executable
user1: user1.o libksocket.a
	$(CXX) user1.o $(LDFLAGS) -o user1
	@echo "Executable user1 created"

# Rule to link user2 executable
user2: user2.o libksocket.a
	$(CXX) user2.o $(LDFLAGS) -o user2
	@echo "Executable user2 created"

# Rule to compile user1.cpp into user1.o
user1.o: user1.cpp ksocket.h
	$(CXX) $(CXXFLAGS) -c user1.cpp -o user1.o

# Rule to compile user2.cpp into user2.o
user2.o: user2.cpp ksocket.h
	$(CXX) $(CXXFLAGS) -c user2.cpp -o user2.o

# Clean up
clean:
	rm -f $(OBJS) $(TARGETS)
	@echo "Cleaned up user1 and user2 files"

.PHONY: all clean
